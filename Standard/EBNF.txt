Document ::= DOLLibrary | NativeDocument
DOLLibrary ::= 'library' [ PrefixMap ] LibraryName Qualification LibraryItem*
NativeOMS ::= ($<$)language specific($>$) 
LibraryItem ::= LibraryImport | OMSDefinition | NetworkDefinition | MappingDefinition | QueryRelatedDefinition | Qualification
LibraryImport ::= 'lib-import' LibraryName
Qualification ::= LanguageQualification | LogicQualification | SyntaxQualification
LanguageQualification ::= 'lang-select' LanguageRef
LogicQualification ::= 'logic-select' LogicRef
SyntaxQualification ::= 'syntax-select' SyntaxRef
LibraryName ::= IRI
PrefixMap ::= 'prefix-map' PrefixBinding*
PrefixBinding ::= 'prefix-binding' String FullIRI [ Separators ]
Separators ::= 'separators' String String





NetworkDefinition ::= 'network-definition' NetworkName [ ConservativityStrength ] Network
NetworkName ::= IRI
Network ::= 'network' NetworkElement* ExcludedElement*
NetworkElement ::= 'network-element' [ Id ] OMSOrMappingorNetworkRef
ExcludedElement ::= PathReference | OMSOrMappingorNetworkRef
PathReference ::= 'path' OMSOrMappingorNetworkRef OMSOrMappingorNetworkRef
OMSOrMappingorNetworkRef ::= IRI


BasicOMS ::= ($<$)language specific($>$) 
ClosableOMS ::= BasicOMS | OMSReference
OMSReference :: = 'oms-ref' OMSRef [ ImportName ]
RelativeClosureOMS ::= 'relative-closure' ClosureType ClosableOMS
ExtendingOMS ::= ClosableOMS | RelativeClosureOMS
OMS ::= ExtendingOMS | ClosureOMS | TranslationOMS | ReductionOMS | ExtractionOMS | ApproximationOMS | FilteringOMS | UnionOMS | ExtensionOMS | QualOMS | CombinationOMS | ApplicationOMS
ClosureOMS ::= 'closure-symbols' OMS Closure 
TranslationOMS ::= 'translation' OMS Translation 
ReductionOMS ::= 'reduction' OMS Reduction 
ExtractionOMS ::= 'module-extract' OMS Extraction 
ApproximationOMS ::= 'approximation' OMS Approximation 
FilteringOMS ::= 'filtering' OMS Filtering 
UnionOMS ::= 'union' OMS [ ConservativityStrength ] OMS 
ExtensionOMS ::= 'extension' OMS Extension 
QualifiedOMS ::= 'qual-oms' Qualification* OMS 
CombinationOMS ::= 'combination' Network 
ApplicationOMS ::= 'application' OMS SubstName
Closure ::= ClosureType CircClosure CircVars
ClosureType ::= 'minimize' | 'maximize' | 'free' | 'cofree'
CircClosure ::= Symbol+
CircVars ::= Symbol*
Translation ::= 'renaming' OMSLanguageTranslation* [ SymbolMap ]
Reduction ::= HomogeneousReduction | HeterogeneousReduction 
HomogeneousReduction ::= 'hidden' OMSLanguageTranslation* [ Symbol+ ] 
HeterogeneousReduction ::= 'revealed' Symbol+
SymbolMap ::= 'symbol-map-items' SymbolOrMap+
Extraction ::= 'extraction' RemovalKind InterfaceSignature
Approximation ::= 'approx' RemovalKind [ InterfaceSignature ] [ LogicRef ]
Filtering ::= 'filtering' RemovalKind BasicOMS
RemovalKind ::= 'keep' | 'remove'
Extension ::= extension-oms [ ConservativityStrength ] [ ExtensionName ] ExtendingOMS
ConservativityStrength ::= 'consequence-conservative' | 'model-conservative' | 'not-consequence-conservative' | 'not-model-conservative' | 'implied' | 'monomorphic' | 'weak-definitional' | 'definitional'
InterfaceSignature ::= Symbol+
ImportName ::= IRI
ExtensionName ::= IRI


OMSDefinition ::= 'oms-definition' OMSName [ ConservativityStrength ] OMS
Symbol ::= IRI
SymbolMapItem ::= 'symbol-map' Symbol Symbol
SymbolOrMap ::= Symbol | SymbolMapItem
Sentence ::= ($<$)an expression specific to an OMS language($>$) 
OMSName ::= IRI
OMSRef ::= IRI
ExtensionRef ::= IRI
LoLaRef ::= LanguageRef | LogicRef
LanguageRef ::= IRI
LogicRef ::= IRI
SyntaxRef ::= IRI
OMSLanguageTranslation ::= NamedTrans | DefaultTrans 
NamedTrans ::= 'named-trans' OMSLanguageTranslationRef 
DefaultTrans ::= 'default-trans' LoLaRef
OMSLanguageTranslationRef ::= IRI


MappingDefinition ::= InterpretationDefinition | RefinementDefinition | Entailment | EquivalenceDefinition | ModuleRelDefinition | AlignDefinition
InterpretationDefinition ::= 'interpretation-definition' InterpretationName [ ConservativityStrength ] InterpretationType OMSLanguageTranslation* [ SymbolMap ] 
RefinementDefinition ::= 'refinement' InterpretationName Refinement
InterpretationName ::= IRI
InterpretationType ::= 'interpretation-type' OMS OMS
Refinement ::= RefinmentOMS | RefinmentNetwork | RefinmentComposition | SimpleOMSRefinment | SimpleNetworkRefinment  
RefinmentOMS ::= 'ref-oms' OMS 
RefinmentNetwork ::= 'ref-network' Network 
RefinmentComposition ::= 'ref-composition' Refinement Refinement 
SimpleOMSRefinment ::= 'simple-oms-ref' OMS RefinmentMapOMS Refinement 
SimpleNetworkRefinment ::= 'simple-network-ref' Network RefinmentMapNetwork Refinement
RefinmentMapOMS ::= 'refmap-oms' [ OMSLanguageTranslation ] [ SymbolMap ] 
RefinmentMapNetwork ::= 'refmap-network' NodeMap*
NodeMap ::= 'node-map' OMSName OMSName OMSLanguageTranslation* [ SymbolMap ]
Entailment ::= 'entailment' EntailmentName EntailmentType
EntailmentType ::= OMSOMSEntailment | NetworkOMSEntailment | NetworkNetworkEntailment 
OMSOMSEntailment ::= 'oms-oms-entailment' OMS OMS 
NetworkOMSEntailment ::= 'network-oms-entailment' Network OMSName OMS 
NetworkNetworkEntailment ::= 'network-network-entailment' Network Network
EntailmentName ::= IRI
EquivalenceDefinition ::= 'equivalence-definition' EquivalenceName EquivalenceType
EquivalenceName ::= IRI
EquivalenceType ::= OMSEquivalence | NetworkEquivalence
OMSEquivalence ::= 'oms-equivalence' OMS OMS OMS 
NetworkEquivalence ::= 'network-equivalence' Network Network Network
ModuleRelDefinition ::= 'module-definition' ModuleName [ ConservativityStrength ] ModuleType InterfaceSignature
ModuleName ::= IRI
ModuleType ::= 'module-type' OMS OMS
AlignmentDefinition ::= 'alignment-definition' AlignmentName [ AlignmentCardinalityPair ] AlignmentType AlignmentSemantics Correspondence*
AlignmentName ::= IRI
AlignmentCardinalityPair ::= AlignmentCardinalityForward AlignmentCardinalityBackward
AlignmentCardinalityForward ::= 'alignment-cardinality-forward' AlignmentCardinality
AlignmentCardinalityBackward ::= 'alignment-cardinality-backward' AlignmentCardinality
AlignmentCardinality ::= 'injective-and-total' | 'injective' | 'total' | 'neither-injective-nor-total'
AlignmentType ::= 'alignment-type' OMS OMS
AlignmentSemantics ::= 'single-domain' | 'global-domain' | 'contextualized-domain'
Correspondence ::= CorrespondenceBlock | SingleCorrespondence | DefaultCorrespondence
DefaultCorrespondence ::= 'default-correspondence'
CorrespondenceBlock ::= 'correspondence-block' [ Relation ] [ Confidence ] Correspondence Correspondence*
SingleCorrespondence ::= 'correspondence' SymbolRef [ Relation ] [ Confidence ] GeneralizedTerm [ CorrespondenceID ]
CorrespondenceID ::= IRI
SymbolRef ::= IRI
GeneralizedTerm ::= Term | SymbolRef
Term ::= ($<$)an expression specific to an OMS language($>$) 
Relation ::= RelationReference | StandardRelation
RelationReference ::= 'relation-ref' IRI
StandardRelation ::= 'subsumes' | 'is-subsumed' | 'equivalent' | 'incompatible' | 'has-instance' | 'instance-of' | 'default-relation' 
Confidence ::= Float

QueryRelatedDefinition ::= QueryDefinition | SubstitutionDefinition | ResultDefinition
QueryDefinition ::= 'select-query-definition' QueryName Vars Sentence OMS [ OMSLanguageTranslation ]
SubstitutionDefinition ::= 'substitution-definition' SubstitutionName OMS OMS SymbolMapItem
ResultDefinition ::= 'result-def' ResultName SubstitutionName SubstitutionName* QueryName [ Complete ]
QueryName ::= IRI
SubstitutionName ::= IRI
ResultName ::= IRI
Vars ::= Symbol*
Complete ::= 'complete'


IRI ::= FullIRI | CurieIRI 
FullIRI ::= 'full-iri' FullIRI 
CurieIRI ::= 'curie' CURIE
FullIRI ::= ($<$ as defined by the IRI production in \nisref{IETF/RFC 3987:2005} $>$) 
