Library ::= LibraryDefn | NativeOMS
LibraryDefn ::= 'library' [ PrefixMap ] LibraryName Qualification LibraryItem*
NativeOMS ::= ($<$)language specific($>$) 
LibraryItem ::= LibImport | OMSDefn | NetworkDefn | MappingDefn | QueryRelatedDefn | Qualification
LibImport ::= 'lib-import' LibraryName
Qualification ::= LanguageQual | LogicQual | SyntaxQual
LanguageQual ::= 'lang-select' LanguageRef
LogicQual ::= 'logic-select' LogicRef
SyntaxQual ::= 'syntax-select' SyntaxRef
LibraryName ::= IRI
PrefixMap ::= 'prefix-map' PrefixBinding*
PrefixBinding ::= 'prefix-binding' String FullIRI [ Separators ]
Separators ::= 'separators' String String


NetworkDefn ::= 'network-defn' NetworkName [ ConsStrength ] Network
NetworkName ::= IRI
Network ::= 'network' NetworkElement* ExcludedElement*
NetworkElement ::= 'network-element' [ Id ] OMSOrMappingorNetworkRef
ExcludedElement ::= PathRef | OMSOrMappingorNetworkRef
PathRef ::= 'path' OMSOrMappingorNetworkRef OMSOrMappingorNetworkRef
OMSOrMappingorNetworkRef ::= IRI


BasicOMS ::= ($<$)language specific($>$) 
MinimizableOMS ::= BasicOMS | OMSReference
OMSReference :: = 'oms-ref' OMSRef [ ImportName ]
RelativeMinimizationOMS ::= 'relative-minimize' MinType MinimizableOMS
ExtendingOMS ::= MinimizableOMS | RelativeMinimizationOMS
OMS ::= ExtendingOMS | MinimizationOMS | TranslationOMS | ReductionOMS | ExtractionOMS | ApproximationOMS | FilteringOMS | UnionOMS | ExtensionOMS | QualOMS | CombinationOMS | ApplicationOMS
MinimizationOMS ::= 'minimize-symbols' OMS Minimization 
TranslationOMS ::= 'translation' OMS Translation 
ReductionOMS ::= 'reduction' OMS Reduction 
ExtractionOMS ::= 'module-extract' OMS Extraction 
ApproximationOMS ::= 'approximation' OMS Approximation 
FilteringOMS ::= 'filtering' OMS Filtering 
UnionOMS ::= 'union' OMS [ ConsStrength ] OMS 
ExtensionOMS ::= 'extension' OMS Extension 
QualOMS ::= 'qual-oms' Qualification* OMS 
CombinationOMS ::= 'combination' Network 
ApplicationOMS ::= 'application' OMS SubstName
Minimization ::= MinType CircMin CircVars
MinType ::= 'minimize' | 'maximize' | 'free' | 'cofree'
CircMin ::= Symbol+
CircVars ::= Symbol*
Translation ::= 'renaming' OMSLangTrans* [ SymbolMap ]
Reduction ::= HomogeneousReduction | HeterogeneousReduction 
HomogeneousReduction ::= 'hidden' OMSLangTrans* [ Symbol+ ] 
HeterogeneousReduction ::= 'revealed' Symbol+
SymbolMap ::= 'symbol-map-items' SymbolOrMap+
Extraction ::= 'extraction' RemovalKind InterfaceSignature
Approximation ::= 'approx' RemovalKind [ InterfaceSignature ] [ LogicRef ]
Filtering ::= 'filtering' RemovalKind BasicOMS
RemovalKind ::= 'keep' | 'remove'
Extension ::= extension-oms [ ConsStrength ] [ ExtensionName ] ExtendingOMS
ConsStrength ::= 'consequence-conservative' | 'model-conservative' | 'not-consequence-conservative' | 'not-model-conservative' | 'implied' | 'monomorphic' | 'weak-definitional' | 'definitional'
InterfaceSignature ::= Symbol+
ImportName ::= IRI
ExtensionName ::= IRI


OMSDefn ::= 'oms-defn' OMSName [ ConsStrength ] OMS
Symbol ::= IRI
SymbolMapItem ::= 'symbol-map' Symbol Symbol
SymbolOrMap ::= Symbol | SymbolMapItem
Sentence ::= ($<$)an expression specific to an OMS language($>$) 
OMSName ::= IRI
OMSRef ::= IRI
ExtensionRef ::= IRI
LoLaRef ::= LanguageRef | LogicRef
LanguageRef ::= IRI
LogicRef ::= IRI
SyntaxRef ::= IRI
OMSLangTrans ::= NamedTrans | DefaultTrans 
NamedTrans ::= 'named-trans' OMSLangTransRef 
DefaultTrans ::= 'default-trans' LoLaRef
OMSLangTransRef ::= IRI


MappingDefn ::= IntprDefn | RefinementDefn | Entailment | EquivDefn | ModuleRelDefn | AlignDefn
IntprDefn ::= 'intpr-defn' IntprName [ ConsStrength ] IntprType OMSLangTrans* [ SymbolMap ] 
RefinementDefn ::= 'refinement' IntprName Refinement
IntprName ::= IRI
IntprType ::= 'intpr-type' OMS OMS
Refinement ::= RefOMS | RefNetwork | RefComposition | SimpleOMSRef | SimpleNetworkRef  
RefOMS ::= 'ref-oms' OMS 
RefNetwork ::= 'ref-network' Network 
RefComposition ::= 'ref-composition' Refinement Refinement 
SimpleOMSRef ::= 'simple-oms-ref' OMS RefMapOMS Refinement 
SimpleNetworkRef ::= 'simple-network-ref' Network RefMapNetwork Refinement
RefMapOMS ::= 'refmap-oms' [ OMSLangTrans ] [ SymbolMap ] 
RefMapNetwork ::= 'refmap-network' NodeMap*
NodeMap ::= 'node-map' OMSName OMSName OMSLangTrans* [ SymbolMap ]
Entailment ::= 'entailment' EntailmentName EntailmentType
EntailmentType ::= OMSOMSEntailment | NetworkOMSEntailment | NetworkNetworkEntailment 
OMSOMSEntailment ::= 'oms-oms-entailment' OMS OMS 
NetworkOMSEntailment ::= 'network-oms-entailment' Network OMSName OMS 
NetworkNetworkEntailment ::= 'network-network-entailment' Network Network
EntailmentName ::= IRI
EquivDefn ::= 'equiv-defn' EquivName EquivType
EquivName ::= IRI
EquivType ::= OMSEquiv | NetworkEquiv
OMSEquiv ::= 'oms-equiv' OMS OMS OMS 
NetworkEquiv ::= 'network-equiv' Network Network Network
ModuleRelDefn ::= 'module-defn' ModuleName [ ConsStrength ] ModuleType InterfaceSignature
ModuleName ::= IRI
ModuleType ::= 'module-type' OMS OMS
AlignDefn ::= 'align-defn' AlignName [ AlignCardPair ] AlignType AlignSem Correspondence*
AlignName ::= IRI
AlignCardPair ::= AlignCardForward AlignCardBackward
AlignCardForward ::= 'align-card-forward' AlignCard
AlignCardBackward ::= 'align-card-backward' AlignCard
AlignCard ::= 'injective-and-total' | 'injective' | 'total' | 'neither-injective-nor-total'
AlignType ::= 'align-type' OMS OMS
AlignSem ::= 'single-domain' | 'global-domain' | 'contextualized-domain'
Correspondence ::= CorrespondenceBlock | SingleCorrespondence | DefaultCorrespondence
DefaultCorrespondence ::= 'default-correspondence'
CorrespondenceBlock ::= 'correspondence-block' [ Relation ] [ Confidence ] Correspondence Correspondence*
SingleCorrespondence ::= 'correspondence' SymbolRef [ Relation ] [ Confidence ] TermOrSymbolRef [ CorrespondenceID ]
CorrespondenceID ::= IRI
SymbolRef ::= IRI
TermOrSymbolRef ::= Term | SymbolRef
Term ::= ($<$)an expression specific to an OMS language($>$) 
Relation ::= RelationRef | StandardRelation
RelationRef ::= 'relation-ref' IRI
StandardRelation ::= 'subsumes' | 'is-subsumed' | 'equivalent' | 'incompatible' | 'has-instance' | 'instance-of' | 'default-relation' 
Confidence ::= Float

QueryRelatedDefn ::= QueryDefn | SubstDefn | ResultDefn
QueryDefn ::= 'select-query-defn' QueryName Vars Sentence OMS [ OMSLangTrans ]
SubstDefn ::= 'subst-defn' SubstName OMS OMS SymbolMapItem
ResultDefn ::= 'result-def' ResultName SubstName SubstName* QueryName [ Complete ]
QueryName ::= IRI
SubstName ::= IRI
ResultName ::= IRI
Vars ::= Symbol*
Complete ::= 'complete'


IRI ::= FullIRI | CurieIRI 
FullIRI ::= 'full-iri' FullIRI 
CurieIRI ::= 'curie' CURIE
FullIRI ::= ($<$ as defined by the IRI production in \nisref{IETF/RFC 3987:2005} $>$) 
